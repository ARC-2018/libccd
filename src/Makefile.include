###
# libgjk
# ---------------------------------
# Copyright (c)2010 Daniel Fiser <danfis@danfis.cz>
#
#
#  This file is part of libgjk.
#
#  Distributed under the OSI-approved BSD License (the "License");
#  see accompanying file BDS-LICENSE for details or see
#  <http://www.opensource.org/licenses/bsd-license.php>.
#
#  This software is distributed WITHOUT ANY WARRANTY; without even the
#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the License for more information.
##

CC   ?= gcc
CXX  ?= g++
MOC  ?= moc
FLEX ?= flex
DOXYGEN ?= doxygen
DIA ?= dia
CONVERT ?= convert
M4 ?= m4

SYSTEM = $(shell uname)

SYSTEM_CXXFLAGS =
SYSTEM_LDFLAGS =

ifeq '$(SYSTEM)' 'FreeBSD'
  AWK ?= gawk
  SED ?= gsed
  SYSTEM_CXXFLAGS = -Wno-long-long
else
  AWK ?= awk
  SED ?= sed
endif

NOWALL ?= no
NOPEDANTIC ?= no
DEBUG ?= no
PROFIL ?= no

ifeq '$(PROFIL)' 'yes'
  DEBUG = yes
endif

ifeq '$(DEBUG)' 'yes'
  CFLAGS = -g
  CXXFLAGS = -g
endif
ifeq '$(PROFIL)' 'yes'
  CFLAGS += -pg
  CXXFLAGS += -pg
endif

ifneq '$(NOWALL)' 'yes'
  CFLAGS += -Wall
  CXXFLAGS += -Wall
endif
ifneq '$(NOPEDANTIC)' 'yes'
  CFLAGS += -pedantic
  CXXFLAGS += -pedantic
endif

USE_DOUBLE ?= yes
USE_SINGLE ?= no

ifeq '$(USE_SINGLE)' 'yes'
  CFLAGS += -DGJK_SINGLE
  USE_DOUBLE = no
endif
ifeq '$(USE_DOUBLE)' 'yes'
  CFLAGS += -DGJK_DOUBLE
endif

CFLAGS += --std=gnu99
CXXFLAGS += $(SYSTEM_CXXFLAGS)
LDFLAGS += $(SYSTEM_LDFLAGS)

CHECKTARGETS = 
check-dep: $(CHECKTARGETS)

showvars:
	@echo "SYSTEM = "$(SYSTEM)
	@echo ""
	@echo "CC      = $(CC)"
	@echo "CXX     = $(CXX)"
	@echo "MOC     = $(MOC)"
	@echo "FLEX    = $(FLEX)"
	@echo "AWK     = $(AWK)"
	@echo "SED     = $(SED)"
	@echo "M4      = $(M4)"
	@echo "DOXYGEN = $(DOXYGEN)"
	@echo "SED     = $(SED)"
	@echo "DIA     = $(DIA)"
	@echo ""
	@echo "DEBUG      = $(DEBUG)"
	@echo "PROFIL     = $(PROFIL)"
	@echo "NOWALL     = $(NOWALL)"
	@echo "NOPEDANTIC = $(NOPEDANTIC)"
	@echo ""
	@echo "CFLAGS   = $(CFLAGS)"
	@echo "CXXFLAGS = $(CXXFLAGS)"
	@echo "LDFLAGS  = $(LDFLAGS)"

.DEFAULT_GOAL := all
.PHONY: showvars 
